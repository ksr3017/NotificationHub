datasource postgres {
  provider = "postgresql"
  url      = env("POSTGRESQL_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  createdAt DateTime  @default(now())
  firstName String?
  id        String    @id @default(cuid())
  lastName  String?
  password  String
  projects  Project[]
  roles     String[]
  updatedAt DateTime  @updatedAt
  username  String    @unique
}

model Project {
  createdAt   DateTime  @default(now())
  description String?
  dueDate     DateTime?
  id          String    @id @default(cuid())
  name        String
  owner       User      @relation(fields: [ownerId])
  ownerId     String
  startDate   DateTime?
  tasks       Task[]
  updatedAt   DateTime  @updatedAt
}

model Task {
  assignedTo     String?
  createdAt      DateTime        @default(now())
  estimationDays Int?
  id             String          @id @default(cuid())
  project        Project?        @relation(fields: [projectId])
  projectId      String?
  startDate      DateTime?
  status         EnumTaskStatus?
  title          String
  updatedAt      DateTime        @updatedAt
}

model NotificationTopicConfiguration {
  createdAt           DateTime                                      @default(now())
  displayNameForTopic String?
  encryption          EnumNotificationTopicConfigurationEncryption?
  id                  String                                        @id @default(cuid())
  topicName           String
  topicType           EnumNotificationTopicConfigurationTopicType
  updatedAt           DateTime                                      @updatedAt
}

enum EnumTaskStatus {
  New
  Pending
  Ongoing
  Done
}

enum EnumNotificationTopicConfigurationEncryption {
  EnableEncryption
  DisableEncryption
}

enum EnumNotificationTopicConfigurationTopicType {
  Fifo
  Standard
}